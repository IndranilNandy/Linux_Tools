#!/bin/bash

check_path() {
    path=./config/userdefined/"${1}"
    [[ -d "$path" ]] && [[ -e "$path"/.clusterconfig ]] && [[ -e "$path"/.machineconfig ]] || return 1
}

configureCredStore() {
    credStorePath=$(dirname "$(readlink -f "$machcf")")
    [[ -f "$credStorePath"/.credconfig ]] && return 0

    # Create credential file and open it in editor to update
    cp "$credStorePath"/.machineconfig* "$credStorePath"/.credconfig
    editor -w "$credStorePath"/.credconfig
}

init_cluster_config() {
    cluscf=$(pwd)/config/defaults/.clusterconfigdefault
    machcf=$(pwd)/config/defaults/.machineconfigdefault

    for arg in "$@"; do
        case $arg in
        --clusterconfig=*)
            cluscf=$(echo "$arg" | sed "s/--clusterconfig=\(.*\)/\1/")
            ;;
        --machineconfig=*)
            machcf=$(echo "$arg" | sed "s/--machineconfig=\(.*\)/\1/")
            ;;
        --configdir=*)
            dir=$(echo "$arg" | sed "s/--configdir=\(.*\)/\1/")
            ! check_path "$dir" && return 1
            cluscf=$(pwd)/config/userdefined/"$dir"/.clusterconfig
            machcf=$(pwd)/config/userdefined/"$dir"/.machineconfig
            ;;
        --promptpassword)
            export psdsource="prompt"
            ;;
        --filepassword)
            export psdsource="file"
            ;;
        --help)
            cat "$(pwd)"/help/initClusterClients.help
            exit 0
            ;;
        *) ;;
        esac
    done

    echo -e "Cluster configuration file: $cluscf"
    echo -e "Machines configuration file: $machcf"
    echo -e

    configureCredStore

    yes | ln -s -i "$cluscf" $(pwd)/config/.clusterconfig 2>/dev/null
    yes | ln -s -i "$machcf" $(pwd)/config/.machineconfig 2>/dev/null
    yes | ln -s -i "$(dirname "$(readlink -f "$machcf")")"/.credconfig $(pwd)/config/.credconfig 2>/dev/null

    . ./lib/loadCred.lib "$(whoami)" "$(hostname)"
    echo $passwd | sudo -S echo "entered"
}

init_clients() {
    clients=$(cat ./config/.clusterconfig | grep "clients:" | sed "s/clients: *\(.*\)/\1/" | tr " *" "\n" | xargs -I X echo X)
    for c in $clients; do
        (./nodes/clients/client_setup.sh "$c" || echo -e "[CLIENTS] Setup failed in client node $c")
    done
}

! init_cluster_config "$@" && echo -e "[SETUP] Invalid cluster configuration information!" && exit 1
init_clients
