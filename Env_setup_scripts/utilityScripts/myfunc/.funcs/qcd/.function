#!/bin/bash

declare -A mydirs

update_tab_completions() {
    mycompl -W '"'"${!mydirs[@]}" --init --list --wslist --config --wsconfig --refresh --tags --help'"' qcd
    mycompl -W '"'"${!mydirs[@]}" --init --list --wslist --config --wsconfig --refresh --tags --help'"' qcode
    mycompl -W '"'"${!mydirs[@]}" --init --list --wslist --config --wsconfig --refresh --tags --help'"' qidea
    mycompl -W '"'"${!mydirs[@]}" --init --list --wslist --config --wsconfig --refresh --tags --help'"' qn

    source ~/.bashrc
}

buildwsmap() {
    mapfile -t entryArray <<<"$(grep -v "^ *#" <$curDir/.funcs/qcd/.ws_mappings | xargs -I X echo X)"

    for line in "${entryArray[@]}"; do
        cdir=$(echo "$line" | awk '{ print $1 }')
        target=$(echo "$line" | awk '{ print $2 }')
        mydirs["$cdir"]="$target"
    done
}

buildqcdmap() {
    if [[ -z $(which myfunc) ]]; then
        curDir=$(pwd)
    else
        curDir=$(dirname "$(tracelink "$(which myfunc)")")
    fi

    mydirs=()
    mapfile -t entryArray <<<"$(grep -v "^ *#" <$curDir/.funcs/qcd/.dir_mappings | xargs -I X echo X)"

    for line in "${entryArray[@]}"; do
        cdir=$(echo "$line" | awk '{ print $1 }')
        target=$(echo "$line" | awk '{ print $2 }')
        mydirs["$cdir"]="$target"
    done

    buildwsmap
    update_tab_completions
}

show_ws_tags() {
    echo -e "TAGS\t\tDIR-ALIAS\t\tDIR-TARGET\n"
    grep -v "^ *#" <"$curDir"/.funcs/qcd/.ws_mappings | xargs -I X echo X
}

qcd() {

    if [[ -z $(which myfunc) ]]; then
        curDir=$(pwd)
    else
        curDir=$(dirname "$(tracelink "$(which myfunc)")")
    fi

    case ${1} in
    --init)
        buildqcdmap
        ;;
    --list)
        cat "$curDir"/.funcs/qcd/.dir_mappings
        echo -e
        cat "$curDir"/.funcs/qcd/.ws_mappings
        ;;
    --wslist)
        cat "$curDir"/.funcs/qcd/.ws_mappings
        ;;
    --config)
        editor -w "$curDir"/.funcs/qcd/.dir_mappings
        editor -w "$curDir"/.funcs/qcd/.ws_mappings
        echo -e "Run 'qcd --refresh' to enable tab-completions for this entry, ONLY IF you've edited the config files manually without using --config option"
        buildqcdmap
        ;;
    --wsconfig)
        editor -w "$curDir"/.funcs/qcd/.ws_mappings
        echo -e "Run 'qcd --refresh' to enable tab-completions for this entry, ONLY IF you've edited the config files manually without using --wsconfig option"
        buildwsmap
        update_tab_completions
        ;;
    --refresh)
        buildqcdmap
        ;;
    --tags)
        show_ws_tags
        ;;
    --help)
        cat "$curDir"/.funcs/qcd/qcd.help
        ;;
    '')
        cat "$curDir"/.funcs/qcd/qcd.help
        ;;
    *)
        # REMEMBER: Don't call "source ~/.bashrc" inside buildqcdmap and after update_tabcompletions -> it'll be recursive
        # [[ -z ${mydirs[${1}]} ]] && buildqcdmap && source ~/.bashrc
        [[ -z ${mydirs[${1}]} ]] && buildqcdmap

        if [[ -z ${mydirs[${1}]} ]]; then
            (("$#" < 2)) && echo -e "Missing dir-target parameter" && return 1
            target="${2}"
            [[ "$target" == "." ]] && target=$(pwd)
            [[ $(echo "$target" | grep -F "/home/") ]] && target=$(echo "$target" | sed "s#/[^/]*/[^/]*\(/.*\)#\$HOME\1#")

            # echo -e "${1}:$target" >>"$curDir"/.funcs/qcd/.dir_mappings
            echo -e "${1}\t\t\t$target" >>"$curDir"/.funcs/qcd/.dir_mappings

            mydirs["${1}"]="$target"
            # update_tab_completions && source ~/.bashrc
            update_tab_completions
        else
            (("$#" == 2)) && echo -e "dir-alias already exists. Ignoring dir-target."
            if [[ ${2} == "--sudo" ]]; then
                # This still doesn't work, since this turns to root-user, and the .bashrc for the login user isn't executed
                targetDir="${mydirs[${1}]}"
                export targetDir
                eval "sudo su -; cd $targetDir"
            else
                eval "cd ${mydirs[${1}]}"
            fi
        fi
        ;;
    esac
}

qcode() {

    if [[ -z $(which myfunc) ]]; then
        curDir=$(pwd)
    else
        curDir=$(dirname "$(tracelink "$(which myfunc)")")
    fi

    case ${1} in
    --init)
        buildqcdmap
        ;;
    --list)
        cat "$curDir"/.funcs/qcd/.dir_mappings
        echo -e
        cat "$curDir"/.funcs/qcd/.ws_mappings
        ;;
    --wslist)
        cat "$curDir"/.funcs/qcd/.ws_mappings
        ;;
    --config)
        editor -w "$curDir"/.funcs/qcd/.dir_mappings
        editor -w "$curDir"/.funcs/qcd/.ws_mappings
        echo -e "Run 'qcode --refresh' to enable tab-completions for this entry, ONLY IF you've edited the config files manually without using --config option"
        buildqcdmap
        ;;
    --wsconfig)
        editor -w "$curDir"/.funcs/qcd/.ws_mappings
        echo -e "Run 'qcode --refresh' to enable tab-completions for this entry, ONLY IF you've edited the config files manually without using --wsconfig option"
        buildwsmap
        update_tab_completions
        ;;
    --refresh)
        buildqcdmap
        ;;
    --tags)
        show_ws_tags
        ;;
    --help)
        cat "$curDir"/.funcs/qcd/qcode.help
        ;;
    '')
        code . &
        ;;
    *)
        if [[ "${1}" == "." ]]; then
            code . &
        else
            (qcd "${1}" && code .)
        fi
        ;;
    esac
}

qidea() {

    if [[ -z $(which myfunc) ]]; then
        curDir=$(pwd)
    else
        curDir=$(dirname "$(tracelink "$(which myfunc)")")
    fi

    case ${1} in
    --init)
        buildqcdmap
        ;;
    --list)
        cat "$curDir"/.funcs/qcd/.dir_mappings
        echo -e
        cat "$curDir"/.funcs/qcd/.ws_mappings
        ;;
    --wslist)
        cat "$curDir"/.funcs/qcd/.ws_mappings
        ;;
    --config)
        editor -w "$curDir"/.funcs/qcd/.dir_mappings
        editor -w "$curDir"/.funcs/qcd/.ws_mappings
        echo -e "Run 'qidea --refresh' to enable tab-completions for this entry, ONLY IF you've edited the config files manually without using --config option"
        buildqcdmap
        ;;
    --wsconfig)
        editor -w "$curDir"/.funcs/qcd/.ws_mappings
        echo -e "Run 'qcode --refresh' to enable tab-completions for this entry, ONLY IF you've edited the config files manually without using --wsconfig option"
        buildwsmap
        update_tab_completions
        ;;
    --refresh)
        buildqcdmap
        ;;
    --tags)
        show_ws_tags
        ;;
    --help)
        cat "$curDir"/.funcs/qcd/qidea.help
        ;;
    '')
        intellij-idea-community . &
        ;;
    *)
        if [[ "${1}" == "." ]]; then
            intellij-idea-community . &
        else
            (qcd "${1}" && intellij-idea-community .)
        fi
        ;;
    esac
}

qn() {
    if [[ -z $(which myfunc) ]]; then
        curDir=$(pwd)
    else
        curDir=$(dirname "$(tracelink "$(which myfunc)")")
    fi

    case ${1} in
    --init)
        buildqcdmap
        ;;
    --list)
        cat "$curDir"/.funcs/qcd/.dir_mappings
        echo -e
        cat "$curDir"/.funcs/qcd/.ws_mappings
        ;;
    --wslist)
        cat "$curDir"/.funcs/qcd/.ws_mappings
        ;;
    --config)
        editor -w "$curDir"/.funcs/qcd/.dir_mappings
        editor -w "$curDir"/.funcs/qcd/.ws_mappings
        echo -e "Run 'qn --refresh' to enable tab-completions for this entry, ONLY IF you've edited the config files manually without using --config option"
        buildqcdmap
        ;;
    --wsconfig)
        editor -w "$curDir"/.funcs/qcd/.ws_mappings
        echo -e "Run 'qcode --refresh' to enable tab-completions for this entry, ONLY IF you've edited the config files manually without using --wsconfig option"
        buildwsmap
        update_tab_completions
        ;;
    --refresh)
        buildqcdmap
        ;;
    --tags)
        show_ws_tags
        ;;
    --help)
        cat "$curDir"/.funcs/qcd/qn.help
        ;;
    '')
        eval "nautilus . &"
        ;;
    *)
        for dir in $(echo "$@" | xargs -n1); do
            [[ -z ${mydirs[$dir]} ]] && buildqcdmap
            if [[ "$dir" == "." ]]; then
                eval "nautilus . &"
            else
                eval "nautilus ${mydirs[$dir]} &"
            fi
        done
        ;;
    esac
}

# No need to call it here during .bashrc loading, it will increase load-time
# buildqcdmap
