{
	// Place your snippets for shellscript here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	// *****************************************************************************
	// UTILITY SNIPPETS
	// *****************************************************************************
	"trace-curdir": {
		"prefix": [
			"[snp] trace-curdir",
			"[utility] trace-curdir",
		],
		"body": [
			"if [ -L \\$(which ${1:command}) ]; then",
			"\tcurDir=\"\\$(dirname \"\\$(tracelink ${1:command})\")\"",
			"else",
			"\tcurDir=\"\\$(pwd)\"",
			"fi"
		],
		"description": "trace-curdir"
	},
	"readfile with field separator": {
		"prefix": [
			"[snp] readfile with field separator",
			"[utility] readfile with field separator",
		],
		"body": [
			"for mapentry in \\$(cat \"\\$mapping_file\" | grep -v \"^\\$\" | grep -v \" *#\"); do",
			"\tyaml_name=\\$(echo \"\\$mapentry\" | awk -F'|' '{print \\$1}')",
			"\tyaml_snippet=\\$(echo \"\\$mapentry\" | awk -F'|' '{print \\$2}')",
			"done"
		],
		"description": "readfile with field separator"
	},
}